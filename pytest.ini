[tool:pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test output options
addopts =
    --tb=short
    -v
    --strict-markers
    --color=yes
    -ra

# Asyncio configuration
asyncio_mode = auto

# Test markers
markers =
    setup: Container and environment setup tests (deselect with '-m "not setup"')
    connectivity: Basic service connectivity tests (deselect with '-m "not connectivity"')
    integration: Full integration tests (deselect with '-m "not integration"')
    slow: Tests that take a long time to run
    redis: Tests requiring Redis
    rabbitmq: Tests requiring RabbitMQ

# Logging
log_cli = false
log_cli_level = INFO
log_file = tests.log
log_file_level = DEBUG

# Coverage settings (if using pytest-cov)
[coverage:run]
source = agent_communication
omit =
    */tests/*
    */test_*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if __name__ == "__main__":
    raise AssertionError
    raise NotImplementedError
    if TYPE_CHECKING:
